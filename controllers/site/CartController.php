<?php
class CartController extends Controller
{

    // Trang gi·ªè h√†ng ch√≠nh
    public function index()
    {
        $cart = $_SESSION['cart'] ?? [];
        $total = $this->getCartTotal();

        $this->view("cart/index", [
            'cart' => $cart,
            'total' => $total
        ]);
    }


    // Th√™m s·∫£n ph·∫©m v√†o gi·ªè
    public function add($id = null)
    {
        if (!$id && isset($_GET['id'])) {
            $id = intval($_GET['id']);
        }

        if (!$id) {
            echo json_encode(['success' => false, 'error' => 'Thi·∫øu ID s·∫£n ph·∫©m']);
            return;
        }

        // ‚úÖ L·∫•y s·ªë l∆∞·ª£ng t·ª´ query string (n·∫øu kh√¥ng c√≥ th√¨ m·∫∑c ƒë·ªãnh l√† 1)
        $qty = isset($_GET['qty']) ? max(1, intval($_GET['qty'])) : 1;

        $productModel = $this->model("ProductModel");
        $product = $productModel->getById($id);

        if (!$product) {
            echo json_encode(['success' => false, 'error' => 'Kh√¥ng t√¨m th·∫•y s·∫£n ph·∫©m']);
            return;
        }

        // ‚úÖ B·∫£o ƒë·∫£m session cart t·ªìn t·∫°i
        if (!isset($_SESSION['cart'])) {
            $_SESSION['cart'] = [];
        }

        // ‚úÖ Th√™m ho·∫∑c c·ªông th√™m ƒë√∫ng s·ªë l∆∞·ª£ng
        if (isset($_SESSION['cart'][$id])) {
            $_SESSION['cart'][$id]['qty'] += $qty;
        } else {
            $_SESSION['cart'][$id] = [
                'id'    => $product['id'],
                'name'  => $product['name'],
                'price' => (float)$product['price'],
                'qty'   => $qty,
                'image' => $product['image']
            ];
        }

        // ‚úÖ T√≠nh t·ªïng ti·ªÅn
        $total = 0;
        $totalQty = 0;
        foreach ($_SESSION['cart'] as $item) {
            $total += $item['price'] * $item['qty'];
            $totalQty += $item['qty'];
        }

        // ‚úÖ Debug log (ch·ªâ in khi dev)
        error_log("[üõí ADD] ID={$id}, QTY={$qty}, TOTAL={$total}, COUNT={$totalQty}");

        // ‚úÖ Tr·∫£ JSON response
        header('Content-Type: application/json');
        echo json_encode([
            'success' => true,
            'count'   => $totalQty,
            'total'   => $total,
            'cart'    => array_values($_SESSION['cart'])
        ]);
    }


    // C·∫≠p nh·∫≠t s·ªë l∆∞·ª£ng s·∫£n ph·∫©m trong gi·ªè (AJAX)
    public function update($id = null)
    {
        if (!isset($_SESSION)) session_start();
        header('Content-Type: application/json');

        if (!$id) {
            echo json_encode(['success' => false, 'error' => 'Thi·∫øu ID s·∫£n ph·∫©m']);
            return;
        }

        $qty = isset($_GET['qty']) ? (int)$_GET['qty'] : 1;

        // N·∫øu qty = 0 th√¨ xo√° lu√¥n s·∫£n ph·∫©m
        if ($qty <= 0) {
            unset($_SESSION['cart'][$id]);
        } else {
            if (isset($_SESSION['cart'][$id])) {
                $_SESSION['cart'][$id]['qty'] = $qty;
            }
        }

        // T√≠nh l·∫°i t·ªïng ti·ªÅn + t·ªïng s·ªë m√≥n
        $total = 0;
        $totalQty = 0;
        foreach ($_SESSION['cart'] as $item) {
            $total += $item['price'] * $item['qty'];
            $totalQty += $item['qty'];
        }

        echo json_encode([
            'success' => true,
            'count' => $totalQty,
            'total' => $total,
            'cart' => array_values($_SESSION['cart'])
        ]);
    }




    // X√≥a s·∫£n ph·∫©m kh·ªèi gi·ªè
    public function remove()
    {
        if (isset($_GET['id']) && isset($_SESSION['cart'][$_GET['id']])) {
            unset($_SESSION['cart'][$_GET['id']]);
        }
        header("Location: " . $_SERVER['HTTP_REFERER']);
        exit;
    }

    // T√≠nh t·ªïng ti·ªÅn gi·ªè h√†ng
    private function getCartTotal()
    {
        $total = 0;
        if (!empty($_SESSION['cart'])) {
            foreach ($_SESSION['cart'] as $item) {
                $total += $item['price'] * $item['qty'];
            }
        }
        return $total;
    }

    // ƒê·∫øm t·ªïng s·ªë s·∫£n ph·∫©m
    private function getCartCount()
    {
        $count = 0;
        if (!empty($_SESSION['cart'])) {
            foreach ($_SESSION['cart'] as $item) {
                $count += $item['qty'];
            }
        }
        return $count;
    }
}
